name: Deploy Django Template

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  deploy-template:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv and llm tool
        run: |
          python -m pip install --upgrade pip uv
          uv tool install llm

      - name: Run template conversion
        run: python template-generator/scripts/convert_to_template.py

      - name: Checkout template repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/yads
          token: ${{ secrets.TEMPLATE_REPO_TOKEN }}
          path: template-repo
          fetch-depth: 0

      - name: Sync changes to template repository
        run: |
          # Use rsync to sync changes while preserving .git
          rsync -av --delete --exclude='.git' template-output/ template-repo/

          cd template-repo
          git add .

      - name: Generate commit message and push
        if: success()
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          COMMIT_MESSAGE_MODEL: ${{ vars.LLM_MODEL || 'gpt-4o-mini' }}
          SOURCE_COMMIT: ${{ github.sha }}
          SOURCE_REF: ${{ github.ref }}
        run: |
          cd template-repo

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Get git diff for context
          DIFF_OUTPUT=$(git diff --staged --name-status)
          DIFF_CONTENT=$(git diff --staged | head -c 3000)

          # Save the template for commit messages
          mkdir -p $(llm templates path)
          cp ../template-generator/commit-template.yaml $(llm templates path)/commit_msg

          # Generate commit message using llm template
          if [ -n "$OPENAI_API_KEY" ]; then
            COMMIT_MSG=$(uv tool run llm -m "$COMMIT_MESSAGE_MODEL" -t commit_msg -p files_changed $DIFF_OUTPUT -p diff_content $DIFF_CONTENT -p source_commit "$SOURCE_COMMIT" -p source_ref "$SOURCE_REF" 2>/dev/null)

            # Add source commit reference if not already included
            if [[ "$COMMIT_MSG" != *"${SOURCE_COMMIT:0:8}"* ]]; then
              COMMIT_MSG="$COMMIT_MSG"$'\n\n'"Source: ${SOURCE_COMMIT:0:8}"
            fi
          else
            echo "Warning: OPENAI_API_KEY not set, using fallback commit message"
            COMMIT_MSG="Update Django project template"$'\n\n'"Source: ${SOURCE_COMMIT:0:8}"$'\n'"Ref: $SOURCE_REF"
          fi

          # Commit with generated message
          git commit -m "$COMMIT_MSG"
          git push
